class Solution:
    def palindromePairs(self, words: List[str]) -> List[List[int]]:
    
        def is_palindrome(check):
            return check == check[::-1]
        
        wordict = {word: i for i, word in enumerate(words)}
        res = []
        
        for i, word in enumerate(words):
            for j in range(len(word) + 1):
                prefix, suffix = word[:j], word[j:]
                if is_palindrome(prefix):
                    back = suffix[::-1]
                    if back != word and back in wordict:
                        res.append([wordict[back], i])
                if j != len(word) and is_palindrome(suffix):
                    back = prefix[::-1]
                    if back != word and back in wordict:
                        res.append([i, wordict[back]])
        return res
