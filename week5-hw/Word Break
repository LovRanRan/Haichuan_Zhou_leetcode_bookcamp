class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        # Convert the list of words into a set for faster lookup
        wordSet = set(wordDict)
        
        # Initialize the dp array where dp[i] means s[:i] can be segmented
        dp = [False] * (len(s) + 1)
        dp[0] = True  # Base case: empty string is always segmented
        
        # Check each substring ending at position i
        for i in range(1, len(s) + 1):
            # Check each substring starting from j to i
            for j in range(i):
                # If s[j:i] is a word and dp[j] is True, set dp[i] to True
                if dp[j] and s[j:i] in wordSet:
                    dp[i] = True
                    break  # No need to check further, as we found a valid split
        
        # The result for the entire string s is found at dp[len(s)]
        return dp[len(s)]
